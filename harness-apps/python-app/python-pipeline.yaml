pipeline:
  name: python_pipeline
  identifier: python_pipeline
  projectIdentifier: default_project
  orgIdentifier: default
  tags: {}
  properties:
    ci:
      codebase:
        connectorRef: github_latest_connector
        repoName: harness-task-repo
        build: <+input>
  stages:
    - stage:
        name: Build_python_app
        identifier: Build_python_app
        description: ""
        type: CI
        spec:
          cloneCodebase: true
          caching:
            enabled: true
            override: false
          execution:
            steps:
              - step:
                  type: GitClone
                  name: GitClone_1
                  identifier: GitClone_1
                  spec:
                    connectorRef: github_latest_connector
                    repoName: harness-task-repo
                    build:
                      type: branch
                      spec:
                        branch: main
              - step:
                  type: BuildAndPushGAR
                  name: BuildAndPushGAR_1
                  identifier: BuildAndPushGAR_1
                  spec:
                    connectorRef: gcp_connector
                    host: us-west2-docker.pkg.dev
                    projectID: proven-mercury-459707-h7/my-gcr-repo
                    imageName: python-image
                    tags:
                      - <+codebase.commitSha>
                    dockerfile: harness-task-repo/harness-apps/python-app/Dockerfile
                    context: harness-task-repo/harness-apps/python-app
          infrastructure:
            type: KubernetesDirect
            spec:
              connectorRef: k8s
              namespace: python-app
              automountServiceAccountToken: true
              nodeSelector: {}
              os: Linux
    - stage:
        name: Deploy_python_app
        identifier: Deploy_python_app
        description: ""
        type: Deployment
        spec:
          deploymentType: Kubernetes
          environment:
            environmentRef: python_env
            deployToAll: false
            infrastructureDefinitions:
              - identifier: python_app_infra
          execution:
            steps:
              - step:
                  name: Stage Deployment
                  identifier: stageDeployment
                  type: K8sBlueGreenDeploy
                  timeout: 10m
                  spec:
                    skipDryRun: false
                    pruningEnabled: false
              - step:
                  name: Swap primary with stage service
                  identifier: bgSwapServices
                  type: K8sBGSwapServices
                  timeout: 10m
                  spec:
                    skipDryRun: false
              - step:
                  type: K8sBlueGreenStageScaleDown
                  name: K8sBlueGreenStageScaleDown_1
                  identifier: K8sBlueGreenStageScaleDown_1
                  spec:
                    deleteResources: false
                  timeout: 10m
            rollbackSteps:
              - step:
                  name: Swap primary with stage service
                  identifier: rollbackBgSwapServices
                  type: K8sBGSwapServices
                  timeout: 10m
                  spec:
                    skipDryRun: false
          service:
            serviceRef: python_deployement_service
        tags: {}
        failureStrategies:
          - onFailure:
              errors:
                - AllErrors
              action:
                type: StageRollback
